#!/bin/bash

usage () {
echo -e "\e[31m
 usage:
   ${0##*/} get -r:http://repo1.maven.org/maven2/ -m:groupId:artifactId:packaging:version [-t:targetDir]
   ${0##*/} install -m:groupId:artifactId:version:packaging -f:/path/to/file.ext
   ${0##*/} deploy -r:http://repo1.maven.org/maven2/ -m:groupId:artifactId:version:packaging -f:/path/to/file.ext -i:repositoryId
   ${0##*/} maven list -r:http://repo1.maven.org/maven2/ -m:groupId:artifactId
\e[0m"
}

info() {
    echo -e "\e[32m$*\e[0m"
}

warn() {
    echo -e "\e[31m$*\e[0m"
}

if [ $# -lt 1 ] ;then
    usage
    exit 0
fi

info "parsing parameters ... "

redirect=true
opts=
repository=http://repo.maven.apache.org/maven2/
groupId=
artifactId=
version=
src=
cmd=
for o in $*
do
    case $o in
        list|wget|get|install|deploy)
            cmd=$o
            ;;
        -f:*)
            src=${o#-f:}
            ;;
        -i:*)
            repositoryId=${o#-i:}
            ;;
        -r:*)
            repository=${o#-r:}
            ;;
        -t:*)
            targetDir=${o#-t:}
            ;;
        -m:*)
            if [ "${o//\//.}" != "$o" ] ;then
                coo=${o#*:}
                coo=${coo#/}
                coo=${coo%/}
                version=${coo##*/}
                coo=${coo%/*}
                artifactId=${coo##*/}
                coo=${coo%/*}
                groupId=${coo//\//.}
                packaging=jar
            else
                coo=${o#-m:}
                groupId=
                artifactId=
                packaging=
                version=
                for e in ${coo//:/ } ;do
                    if [[ -n "$packaging" ]] ;then
                        version=$e
                        continue
                    elif [[ -n "$artifactId" ]]; then
                        packaging=$e
                        continue
                    elif [[ -n "$groupId" ]]; then
                        artifactId=$e
                        continue
                    else
                        groupId=$e
                        continue
                    fi
                done
            fi
            ;;
        -h|-help|--help)
            usage
            exit 0
            ;;
        *)
            opts+="$o "
            ;;
    esac
done

if [[ "$cmd" == "list" ]] ;then
    for ((i = 0; 1 ; i ++)) ;do
        active=$(mvn help:evaluate -Dexpression=settings.profiles[$i].activation.activeByDefault 2>/dev/null|grep -E "true|false")
        if [ $? -ne 0 ] ;then
            break
        fi
        if [ "$active" == "true" ] ;then
            for ((j = 0; 1 ; j++)) ;do
                rep=$(mvn help:evaluate -Dexpression=settings.profiles[$i].repositories[$j].url 2>/dev/null|grep "^https\?://.*$")
                if [ $? -eq 0 ] ;then
                    info "optional repository: $rep"
                    repository+=" $rep"
                else
                    break
                fi
            done
        fi
    done
fi

info "executing command $cmd ... "

case $cmd in
    install)
        mvn install:install-file -DgroupId=$groupId -DartifactId=$artifactId -Dversion=$version -Dpackaging=$packaging -Dfile=$src $opts
        ;;
    deploy)
        mvn deploy:deploy-file -DgroupId=$groupId -DartifactId=$artifactId -Dversion=$version -Dpackaging=$packaging -Dfile=$src -Durl=$repository -DrepositoryId=$repositoryId $opts
        ;;
    get)
        mvn dependency:get -DrepoUrl=$repository -Dartifact=$groupId:$artifactId:$version:$packaging $opts
        if [ -e "$targetDir" ] ;then
            localRepository=$(mvn help:evaluate -Dexpression=settings.localRepository 2>/dev/null|grep "^/")
            cp -vf $localRepository/${groupId//./\/}/$artifactId/$version/$artifactId-$version.$packaging $targetDir
        fi
        ;;
    list)
        echo -e "\e[31mrepos: $repository\e[0m"
        for rep in $repository ;do
            list=$(curl "${rep%/}/${groupId//./\/}/${artifactId}/" -qs|while read ln ;do
                    echo $ln|grep -q ".*<a href=[^<>]*>[^<>/]*/</a>.*"
                    if [ $? -eq 0 ] ;then
                        release=${ln%%/</a>*}
                        release=${release##*>}
                        if [ -n "$release" ] ;then
                            if [ -z "$first" ] ;then
                                first=true
                                echo $release
                            else
                                echo " $release"
                            fi
                        fi
                    fi
                done)
            if [ -n "$list" ] ;then
                echo -e "\e[32m $list \e[0m"
                exit 0
            fi
        done
        ;;
    wget)
        ;;
    *)
        ;;
esac