#!/usr/bin/env bash
set -e

command_name=${0%.*}
command_name=${command_name##*/}

function usage() {
    info "Usage:"
    info "  $command_name {config [options]|start [options]|stop|logs [options]|ps}"
    info "Options:"
    info "  config: add additional options for edas-config-center"
    info "    <docker-run-options>                  #additional options comes from \`docker run --help\`"
    info "  start: start container for current module"
    info "    --reg:<registry-ip-address>           #edas configuration server address"
    info "    --cfg:<spring-cloud-config-server>    #spring cloud config server address"
    info "    --hsf:<hsf.server.port>               #port for hsf server"
    info "    --dbg:<debug-port>                    #java remote debugger port"
    info "    <docker-run-options>                  #additional options comes from \`docker run --help\`"
    info "  logs: display logging information for current container"
    info "    <docker-logs-options>                 #additional options comes from \`docker logs --help\`"
    info "Description:"
    info "  To deploy EDAS application into docker container on localhost, which means docker is pre-required."
    info "  Docker container named by current folder name with prefix of \`edas-\`"
    info "Examples:"
    info "  # start edas config center"
    info "  [root@app1 ~]# $command_name config"
    info "  # start docker container for current maven module and the config center host is \`10.80.1.23\`"
    info "  [root@app1 ~]# $command_name start --reg:10.80.1.23 \\ "
    info "  > -e JAVA_OPTS='-Xdebug -Xrunjdwp:transport=dt_socket,address=0.0.0.0:5005,suspend=n,server=y'\\ "
    info "  > -e local_db_host=10.80.1.23 -p 5005:5005"
    info "  # stop docker container for current maven module"
    info "  [root@app1 ~]# $command_name stop"
}

function fatal() {
    echo -e "\033[31m$*\033[0m"
    usage
}

function info() {
    echo -e "\033[32m$*\033[0m"
}

function stop() {
    info "Trying to stop container: $1 ...";
    count=`docker ps -f name=$1|wc -l`;
    [ $count -eq 2 ] && docker stop $1;
    count=`docker ps -af name=$1|wc -l`;
    [ $count -eq 2 ] && docker rm $1;
    return 0
}

if [ $# -eq 0 ] ;then
    usage
    exit -1
fi

cmd=

registry_ip=192.168.103.108
config_ip=192.168.103.101
options=""
for c in $* ;do
    case $c in
        --reg:*)
            registry_ip=${c#--reg:}
            ;;
        --cfg:*)
            config_ip=${c#--cfg:}
            ;;
        --dbg:*)
            debug_port=${c#--dbg:}
            ;;
        --hsf:*)
            hsf_port=${c#--hsf:}
            ;;
        config|logs|start|stop|ps)
            cmd=$c
            ;;
        *)
            options+="${c// /\\ } "
            ;;
    esac
done

info "Working with command: "
info "  $cmd $registry_ip $config_ip ${options}";
container=edas-${PWD##*/};

case $cmd in
    stop)
        stop $container
        ;;
    logs)
        docker logs $options $container
        ;;
    config)
        container_config=edas-config-center
        stop $container_config
        docker run --name=$container_config -d -p 8080:8080 -p 9600:9600 $options \
            index.tenxcloud.com/revolc/edas-config-center:latest
        ;;
    ps)
        docker ps -af name=$container
        ;;
    start)
        stop $container
        if [ ! -e target -o ! -d target ] ;then
            fatal "Target is not exist or is not a folder."
            exit -1
        fi

        finalName=`mvn help:evaluate -Dexpression=project.build.finalName 2>/dev/null|grep -v "^\[INFO\].*$"|grep -v "^.*\s.*$"`

        [ $? -ne 0 ] && {
            fatal "Cannot retrieve the final name for this artifact."
            exit -1
        }

        [ ! -e target/$finalName.war ] && {
            fatal "Not a valid hsf application."
            exit -1
        }

        [ ! -e target/deploy ] && mkdir target/deploy;
        [ ! -e target/deploy/$finalName.war ] && cp target/$finalName.war target/deploy/$finalName.war;

        #/d/source/directory
        local_wd=$PWD/target/deploy;
        if [ -n "${USERPROFILE}" ] ;then
            #bash from windows
            local_wd=${local_wd//\//\\};
            local_wd=${local_wd#\\};
            local_wd=${local_wd/\\/:\\};
        fi

        info "Mounting ${local_wd//\\/\\\\} ...";

        if [ -n "$debug_port" ] ;then
            if [ -n "${hsf_port}" ] ;then
                docker run --name=$container -d -v $local_wd:/home/tomcat/deploy \
                    --add-host=jmenv.tbsite.net:$registry_ip \
                    --add-host=config.tesir.top:$config_ip $options \
                    -p ${debug_port}:5005 \
                    -p $hsf_port:$hsf_port -e HSF_PORT=$hsf_port -e HSF_HTTP_PORT=$hsf_port \
                    -e JAVA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=0.0.0.0:5005,suspend=n,server=y" \
                    index.tenxcloud.com/revolc/edas:latest
            else
                docker run --name=$container -d -v $local_wd:/home/tomcat/deploy \
                    --add-host=jmenv.tbsite.net:$registry_ip \
                    --add-host=config.tesir.top:$config_ip $options \
                    -p ${debug_port}:5005 \
                    -e JAVA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=0.0.0.0:5005,suspend=n,server=y" \
                    index.tenxcloud.com/revolc/edas:latest
            fi
        else
            docker run --name=$container -d -v $local_wd:/home/tomcat/deploy \
                --add-host=jmenv.tbsite.net:$registry_ip \
                --add-host=config.tesir.top:$config_ip $options \
                index.tenxcloud.com/revolc/edas:latest
        fi
        ;;
    *)
        usage
        ;;
esac
